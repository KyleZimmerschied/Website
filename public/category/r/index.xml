<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | Mike Nguyen</title>
    <link>https://mikenguyen.netlify.app/category/r/</link>
      <atom:link href="https://mikenguyen.netlify.app/category/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© Mike Nguyen 2021</copyright><lastBuildDate>Mon, 16 Aug 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://mikenguyen.netlify.app/images/icon_huef6d9e7391192e98fbb8d5b03794bb07_956_512x512_fill_lanczos_center_2.png</url>
      <title>R</title>
      <link>https://mikenguyen.netlify.app/category/r/</link>
    </image>
    
    <item>
      <title>Create your own hexagon in R</title>
      <link>https://mikenguyen.netlify.app/post/create-your-own-hexagon-in-r/</link>
      <pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/create-your-own-hexagon-in-r/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/create-your-own-hexagon-in-r/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;This is a super fast and easy way to create your first hexagon in R.&lt;/p&gt;
&lt;p&gt;Enjoy !!!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;hexSticker&amp;quot;)
library(hexSticker)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;hexSticker&amp;#39; was built under R version 4.0.5&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;imgurl &amp;lt;- &amp;quot;./logo.png&amp;quot;

plot(
  sticker(
    imgurl,
    package = &amp;quot;&amp;quot;,
    # p_size = 26,
    # p_color = &amp;quot;black&amp;quot;,
    
    # p_x = 1,
    # p_y = 1.5,
    
    s_x = 1,
    s_y = 1,
    s_width = 0.9,
    # s_height = 0.4,
    h_fill = &amp;quot;gray100&amp;quot;,
    h_color = &amp;quot;black&amp;quot;,
    h_size = 2,
    # spotlight = T,
    asp = 0.86,
    # filename = &amp;quot;inst/figures/imgfile.png&amp;quot;
    filename = &amp;quot;./imgfile.png&amp;quot;
  )
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://mikenguyen.netlify.app/post/create-your-own-hexagon-in-r/index.en_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::include_graphics(&amp;quot;./imgfile.png&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;imgfile.png&#34; width=&#34;259&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to add cover image to bookdown</title>
      <link>https://mikenguyen.netlify.app/post/how-to-add-cover-image-to-bookdown/</link>
      <pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/how-to-add-cover-image-to-bookdown/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/how-to-add-cover-image-to-bookdown/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;pre&gt;&lt;code&gt;&amp;lt;div style = &amp;quot;text-align: center&amp;quot;&amp;gt;

![](cover.jpg)

&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively, you can also use &lt;code&gt;r&lt;/code&gt; block&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::include_graphics(&amp;#39;cover.jpg&amp;#39;, dpi = NA)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Bookdown Statistics</title>
      <link>https://mikenguyen.netlify.app/post/bookdown-statistics/</link>
      <pubDate>Sun, 15 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/bookdown-statistics/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/bookdown-statistics/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;It’s possible to have basic statistics from bookdown using &lt;code&gt;connectapi&lt;/code&gt; (&lt;a href=&#34;https://github.com/sol-eng/connect-usage&#34;&gt;basic example&lt;/a&gt;). However, this feature is very limited.&lt;/p&gt;
&lt;p&gt;Hence, it is better to &lt;a href=&#34;(%7B%7B%3C%20relref%20%22../2021-08-14-how-to-connect-bookdown-with-google-analytics%22%20%3E%7D%7D)&#34;&gt;connect bookdown to Google Analytics&lt;/a&gt; to have better metrics. However, the trade-off is that you can’t see every book’s performance at once even though they are all under one account, since it is in one property. You could use Roll-up report, but then you will have to pay to use that feature.&lt;/p&gt;
&lt;p&gt;Another solution is to use Google Analytics API and write your R script to see customized performance of all your books.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to connect bookdown with google analytics</title>
      <link>https://mikenguyen.netlify.app/post/how-to-connect-bookdown-with-google-analytics/</link>
      <pubDate>Sat, 14 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/how-to-connect-bookdown-with-google-analytics/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/how-to-connect-bookdown-with-google-analytics/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Create &lt;a href=&#34;https://analytics.google.com/&#34;&gt;Google Analytics account&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Choose “Analytics Accounts”&lt;/li&gt;
&lt;li&gt;Create “Properties &amp;amp; Apps”&lt;/li&gt;
&lt;li&gt;In “Data Streams”, “Add stream” with your website URL&lt;/li&gt;
&lt;li&gt;Under “Tagging Instructions”, click on gtag.js. You should see something like this:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!-- Global site tag (gtag.js) - Google Analytics --&amp;gt;
&amp;lt;script async src=&amp;quot;https://www.googletagmanager.com/gtag/js?id=G-DMNX2X65HQ&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag(&amp;#39;js&amp;#39;, new Date());

  gtag(&amp;#39;config&amp;#39;, &amp;#39;GA_MEASUREMENT_ID&amp;#39;);
&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where you see &lt;code&gt;GA_MEASUREMENT_ID&lt;/code&gt;, you will your own number.&lt;/p&gt;
&lt;ol start=&#34;6&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Create a &lt;code&gt;.html&lt;/code&gt; file and paste the code script and save it in your bookdown folder. Name it &lt;code&gt;google_analytics.html&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;_output.yml&lt;/code&gt;, change it to&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;bookdown::gitbook:
  includes:
    in_header: [google_analytics.html]
  css: style.css&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;8&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Upload your bookdown&lt;/li&gt;
&lt;li&gt;Go to Google Analytics your Google Analytics account. And voila.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Template for Shiny</title>
      <link>https://mikenguyen.netlify.app/post/template-for-shiny/</link>
      <pubDate>Thu, 29 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/template-for-shiny/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/template-for-shiny/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;New Template to get you produce cool Shiny App instantly&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rmarkdown.rstudio.com/flexdashboard/index.html&#34;&gt;flexdashboard&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;flexdashboard&amp;quot;)
library(flexdashboard)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>CSS and SASS in Shiny</title>
      <link>https://mikenguyen.netlify.app/post/css-and-sass/</link>
      <pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/css-and-sass/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/css-and-sass/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;CSS = Cascading Style Sheets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Selector&lt;/li&gt;
&lt;li&gt;Declaration&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To add CSS to Shiny:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add styling to tags&lt;/li&gt;
&lt;li&gt;Add CSS to HTML header&lt;/li&gt;
&lt;li&gt;Add style sheets with the www directory (most ideal)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SASS = Systematically Awesome Style Sheets (built on top of CSS)&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;SASS&lt;/th&gt;
&lt;th&gt;CSS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Object oriented&lt;/td&gt;
&lt;td&gt;Statement oriented&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Allows nesting&lt;/td&gt;
&lt;td&gt;No nesting&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Allows variables&lt;/td&gt;
&lt;td&gt;Limited variable declaration&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Table by Pedro Silva from Appsilon&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>reproducible example (reprex)</title>
      <link>https://mikenguyen.netlify.app/post/reproducible-example-reprex/</link>
      <pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/reproducible-example-reprex/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/reproducible-example-reprex/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;install once per computer&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;reprex&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or part of `tidyverse&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;tidyverse&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can either call it in every session&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(reprex)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or put it in &lt;code&gt;.Rprofile&lt;/code&gt; for each machine to run whenever you open R&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (interactive()){
  suppressMessages(require(reprex))
}
options(
  reprex.advertise = FALSE, 
  reprex.si = TRUE, 
  reprex.style = TRUE,
  reprex.comment = &amp;quot;#;-&amp;quot;,
  reprex.tidyverse_quiet = FALSE
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to see your &lt;code&gt;.Rprofile&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;usethis::edit_r_profile()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since &lt;code&gt;reprex&lt;/code&gt; is an interactive workflow package, don’t use this with &lt;code&gt;dplyr&lt;/code&gt;, &lt;code&gt;ggplot2&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;When ever you want to ask people about your code, or ask them to debug it&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Copy your code to clipboard&lt;/li&gt;
&lt;li&gt;Simply run in your console&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;reprex()


reprex(advertise = TRUE, # To suppress ads
       si = TRUE, # to include session info
       style = TRUE, # restyle your code
       tidyverse_quiet = TRUE # suppress tidyverse message
       )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or instead of doing it manually, you can select your code, and under “Addins”. select “Render reprex”&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Scaling Shiny</title>
      <link>https://mikenguyen.netlify.app/post/scaling-shiny/</link>
      <pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/scaling-shiny/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/scaling-shiny/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;To solve the problem of scaling:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;From DevOps/IT:
&lt;ul&gt;
&lt;li&gt;Add memory, CPU&lt;/li&gt;
&lt;li&gt;Rstudio Connect set up for multiple machines&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;From R/Shiny engineer:
&lt;ul&gt;
&lt;li&gt;use &lt;a href=&#34;https://book.javascript-for-r.com/shiny-intro.html&#34;&gt;Javascript&lt;/a&gt; for less CPU usage&lt;/li&gt;
&lt;li&gt;extract computations: &lt;a href=&#34;https://appsilon.com/shiny-worker-package/&#34;&gt;Shiny worker&lt;/a&gt;, &lt;a href=&#34;https://www.rplumber.io/&#34;&gt;Plumber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;use a &lt;a href=&#34;https://shiny.rstudio.com/articles/overview.html&#34;&gt;database&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>New Pipe in R</title>
      <link>https://mikenguyen.netlify.app/post/new-pipe-in-r/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/new-pipe-in-r/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/new-pipe-in-r/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;You can read more in Michael Barrowman’s
&lt;a href=&#34;https://michaelbarrowman.co.uk/post/the-new-base-pipe/&#34;&gt;post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But the basic idea is that using the new pipe &lt;code&gt;|&amp;gt;&lt;/code&gt; from the &lt;code&gt;magrittr&lt;/code&gt; library
is much faster than your old pipe &lt;code&gt;%&amp;gt;%&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;magrittr&amp;quot;)
remotes::install_github(&amp;quot;Myko101/magrittrclassic&amp;quot;)
library(&amp;quot;magrittr&amp;quot;)
library(&amp;quot;tidyverse&amp;quot;)
doubler &amp;lt;- function(val) 2*val
x &amp;lt;- 1:10
bm &amp;lt;- bench::mark(
  standard = doubler(x),
  magrittrclassic = x %&amp;gt;&amp;gt;% doubler(),
  magrittr = x %&amp;gt;% doubler(),
  base = x |&amp;gt; doubler()
)
ggplot2::autoplot(bm)
bm2 &amp;lt;- bench::mark(
  standard = (function(y) 2*y)(x),
  magrittrclassic = x %&amp;gt;&amp;gt;% {2*.},
  magrittr = x %&amp;gt;% {2*.},
  base = x |&amp;gt; \(y) 2*y
)
ggplot2::autoplot(bm2)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Randomized Study Design</title>
      <link>https://mikenguyen.netlify.app/post/randomized-study-design/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/randomized-study-design/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/randomized-study-design/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;We can leverage R to create randomized studies using
&lt;a href=&#34;https://www.jdtrat.com/packages/shinysurveys/&#34;&gt;shinysurveys&lt;/a&gt; with learnr&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;shinysurveys&amp;quot;)
library(&amp;quot;learnr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ou can also use &lt;a href=&#34;https://formr.org/&#34;&gt;formr&lt;/a&gt; to create survey with &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fix for &#34;cannot allocate vector of size&#34;</title>
      <link>https://mikenguyen.netlify.app/post/fix-for-cannot-allocate-vector-of-size/</link>
      <pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/fix-for-cannot-allocate-vector-of-size/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/fix-for-cannot-allocate-vector-of-size/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;More package author’s introduction, please access this &lt;a href=&#34;https://cran.r-project.org/web/packages/disk.frame/readme/README.html&#34;&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Instead of loading everything at once into your RAM, you divide your data into chunks.
To quote author of the &lt;code&gt;disk.frame&lt;/code&gt; package: “we go from”R can only deal with data that fits in RAM&#34; to “R can deal with any data that fits on disk”.&#34; While &lt;code&gt;data.frame&lt;/code&gt; uses in-RAM to process, &lt;code&gt;disk.frame&lt;/code&gt; uses hard drive to store and process data.&lt;code&gt;disk.frame&lt;/code&gt; also allows parallel processing.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;disk.frame&amp;quot;) 
# setup_disk.frame() # sets up background workers equal to the number of CPU c res setup_disk.frame(workers =\ 2) \# or you number of workers options(future.globals.maxSize = \Inf) # large dataset can be transferred between sessions
# attr(data.df, &amp;quot;path&amp;quot;) # path to where the disk.frame is 


# to convert data.frame to a     disk.frame
data.df &amp;lt;- as.disk.frame(original_data_frame)

# to convert one large CSV
# takes care of splitting large CSV into smaller ones 
diskf &amp;lt;- disk.frame::csv_to_disk.frame(path_to_csv_file) # you can also specify,outdir = , overwrite = T.     

# to convert multiple CSV
multiple_CSV = c(path_to_csv_file1,path_to_csv_file2)
diskf = disk.frame::csv_to_disk.frame(multiple_CSV)

# for faster performance, specify which column to manipulate
result  = df %&amp;gt;% 
  srep(c(&amp;quot;column1&amp;quot;,&amp;quot;column2&amp;quot;)) %&amp;gt;%
  dplyr::filter()&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>caching for faster Shiny app</title>
      <link>https://mikenguyen.netlify.app/post/caching-for-faster-shiny-app/</link>
      <pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/caching-for-faster-shiny-app/</guid>
      <description>


&lt;p&gt;To have faster performance with Shiny App, you can pass this command to yoru script.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# %&amp;gt;% bindCache()&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>create your own package</title>
      <link>https://mikenguyen.netlify.app/post/create-your-own-package/</link>
      <pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/create-your-own-package/</guid>
      <description>


&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;usethis&amp;quot;)
create_package(path = &amp;quot;../package_name&amp;quot;)
use_description()
usethis::is_package()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;load library&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(devtools)
load_all() # Cmd/Ctrl + Shift + L

# use_pipe()
use_package(&amp;quot;dplyr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You also need to modify your description file&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Imports:
  ggplot2
  dplyr

# install all dependencies in DESCRIPTION
install_deps()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;create function&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;your_own_function &amp;lt;- function(){
  
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Test your package&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test() # Cmd/Ctrl + Shift + T&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;check Malcolm Barrett’s &lt;a href=&#34;https://zenartofrpkgs.netlify.app/#1&#34;&gt;slides&lt;/a&gt; for more detail&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>learnr to guide students</title>
      <link>https://mikenguyen.netlify.app/post/learnr-to-guide-students/</link>
      <pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/learnr-to-guide-students/</guid>
      <description>


&lt;p&gt;Teaching statistics or data science, we can use &lt;code&gt;learnr&lt;/code&gt; package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# library(&amp;quot;learnr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To collect data, we can use &lt;code&gt;learnrhash&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# library(&amp;quot;learnrhash&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Remember to adjust parameters so your &lt;code&gt;Shinyapp.io&lt;/code&gt; can handle the number of students you have in the class. Or you can upload it to GitHub, then students can install to your local machine later.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>use dplyr in Python - siuba library</title>
      <link>https://mikenguyen.netlify.app/post/use-dplyr-in-python-siuba-library/</link>
      <pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/use-dplyr-in-python-siuba-library/</guid>
      <description>


&lt;p&gt;Use siuba library in Python to preserve all your skills from &lt;code&gt;dplyr&lt;/code&gt; package in &lt;code&gt;R&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;pip install siuba&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can see TidyTuesday for tutorial&lt;/p&gt;
&lt;p&gt;Or &lt;a href=&#34;https://learn.siuba.org/intro-data-science/&#34;&gt;Learn Siuba&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Connect WRDS in R</title>
      <link>https://mikenguyen.netlify.app/post/connect-wrds-in-r/</link>
      <pubDate>Tue, 29 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/connect-wrds-in-r/</guid>
      <description>
&lt;link href=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Connect from R to Wharton Research Data Services&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# to set up connection from R to WRDS (https://wrds-www.wharton.upenn.edu/pages/support/programming-wrds/programming-r/r-from-your-computer/)
library(RPostgres)
library(dplyr)

# I&amp;#39;ve set up wrds connection before hand. Please use your username and password here.

# wrds &amp;lt;- dbConnect(Postgres(),
#                   host=&amp;#39;wrds-pgdata.wharton.upenn.edu&amp;#39;,
#                   port=9737,
#                   dbname=&amp;#39;wrds&amp;#39;,
#                   sslmode=&amp;#39;require&amp;#39;,
#                   user=&amp;#39;&amp;#39;)

# Check variables (column headers) in COMP ANNUAL FUNDAMENTAL
#uses the already-established wrds connection to prepare the SQL query string and save the query as the result res.
# check avaiable databases: https://wrds-web.wharton.upenn.edu/wrds/tools/variable.cfm?vendor_id=7
res &amp;lt;- dbSendQuery(wrds, &amp;quot;select column_name
                   from information_schema.columns
                   where table_schema=&amp;#39;compa&amp;#39;
                   and table_name=&amp;#39;funda&amp;#39;
                   order by column_name&amp;quot;)
data &amp;lt;- dbFetch(res, n=-1) # fetches the data that results from running the query res against wrds and stores it as data
dbClearResult(res) # closes the connection
head(data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   column_name
## 1       acchg
## 2        acco
## 3       accrt
## 4     acctchg
## 5     acctstd
## 6        acdo&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# select everything
res &amp;lt;- dbSendQuery(wrds, &amp;quot;select * from compa.funda&amp;quot;)

# from compa.funda

# only select the following variables
res &amp;lt;- dbSendQuery(wrds, &amp;quot;select gvkey, datadate, fyear, indfmt, consol, popsrc, datafmt, tic, cusip, conm, curcd, fyr, act, at, bkvlps, ceq, ch, che, dltt, dlc, emp, np, exchg, cik, costat, naicsh,mkvalt from compa.funda&amp;quot;) #check variables from (https://wrds-web.wharton.upenn.edu/wrds/ds/comp/funda/index.cfm?navId=80)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in result_create(conn@ptr, statement): Closing open result set,
## cancelling previous query&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- dbFetch(res, n=-1)
dbClearResult(res)

head(data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    gvkey   datadate fyear indfmt consol popsrc datafmt  tic     cusip
## 1 001000 1961-12-31  1961   INDL      C      D     STD AE.2 000032102
## 2 001000 1962-12-31  1962   INDL      C      D     STD AE.2 000032102
## 3 001000 1963-12-31  1963   INDL      C      D     STD AE.2 000032102
## 4 001000 1964-12-31  1964   INDL      C      D     STD AE.2 000032102
## 5 001000 1965-12-31  1965   INDL      C      D     STD AE.2 000032102
## 6 001000 1966-12-31  1966   INDL      C      D     STD AE.2 000032102
##                    conm curcd fyr   act    at bkvlps   ceq ch   che  dltt   dlc
## 1 A &amp;amp; E PLASTIK PAK INC   USD  12    NA    NA 2.4342    NA NA    NA 0.100    NA
## 2 A &amp;amp; E PLASTIK PAK INC   USD  12    NA    NA 3.0497 0.552 NA    NA 0.000    NA
## 3 A &amp;amp; E PLASTIK PAK INC   USD  12 0.408    NA 2.9731 0.553 NA    NA 0.015    NA
## 4 A &amp;amp; E PLASTIK PAK INC   USD  12 0.718 1.416 3.0969 0.607 NA 0.269 0.522 0.088
## 5 A &amp;amp; E PLASTIK PAK INC   USD  12 0.725 2.310 2.3835 0.491 NA 0.031 1.154 0.300
## 6 A &amp;amp; E PLASTIK PAK INC   USD  12 1.015 2.430 3.8082 0.834 NA 0.063 1.109 0.124
##   emp    np exchg  cik costat naicsh mkvalt
## 1  NA    NA    12 &amp;lt;NA&amp;gt;      I     NA     NA
## 2  NA    NA    12 &amp;lt;NA&amp;gt;      I     NA     NA
## 3  NA    NA    12 &amp;lt;NA&amp;gt;      I     NA     NA
## 4  NA 0.000    12 &amp;lt;NA&amp;gt;      I     NA     NA
## 5  NA 0.225    12 &amp;lt;NA&amp;gt;      I     NA     NA
## 6  NA 0.050    12 &amp;lt;NA&amp;gt;      I     NA     NA&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>flipbooks</title>
      <link>https://mikenguyen.netlify.app/post/flipbooks/</link>
      <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/flipbooks/</guid>
      <description>
&lt;link href=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Flipbooks can be used for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Education&lt;/li&gt;
&lt;li&gt;Reference&lt;/li&gt;
&lt;li&gt;Communication&lt;/li&gt;
&lt;li&gt;Transparency&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(flipbookr)

cars %&amp;gt;%
  filter(speed &amp;gt; 4) %&amp;gt;%
  ggplot() +
  aes(x = speed) + #BREAK
  aes(y = dist) + #BREAK
  geom_point(
    alpha = .8, 
    color = &amp;quot;blue&amp;quot; 
    ) + 
  aes(size = speed) #BREAK&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>psychological experiments</title>
      <link>https://mikenguyen.netlify.app/post/psychological-experiments/</link>
      <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/psychological-experiments/</guid>
      <description>
&lt;link href=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Use &lt;code&gt;jaysire&lt;/code&gt; package to build flexible behavioral experiments in R. Why?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Better workflow&lt;/li&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;li&gt;Cutomizable&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;remotes::install_github(&amp;quot;djnavarro/jaysire&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>renv</title>
      <link>https://mikenguyen.netlify.app/post/renv/</link>
      <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/renv/</guid>
      <description>
&lt;link href=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Check where your package is installed&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;find.package(&amp;quot;dplyr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;C:/Program Files/R/R-4.0.3/library/dplyr&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All projects use the same library path. Then for each project, you need different library dependencies.&lt;/p&gt;
&lt;div id=&#34;intializing-a-project&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Intializing a project&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;renv::init()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A &lt;code&gt;.Rprofile&lt;/code&gt; is created that forks the current R libraries.&lt;/p&gt;
&lt;p&gt;Now, you can work as before. But the current state of packages would not change.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;snapshot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Snapshot&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;renv::snapshot()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The function tells you the current state of a project, and whether you can to update any packages in that project.&lt;/p&gt;
&lt;p&gt;The lockfile is a JSON file that tells you packages installed in your project, versions, and sources.&lt;/p&gt;
&lt;p&gt;This is useful for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Time capsules (you can return to this project in the future without any unexpected changes)&lt;/li&gt;
&lt;li&gt;Collaborative workflows (different people might have different packages installed).&lt;/li&gt;
&lt;li&gt;Deployments (you can run your project remotely)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;restore&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Restore&lt;/h2&gt;
&lt;p&gt;To restore the previously snapshot, you can use&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;renv::restore()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## * The library is already synchronized with the lockfile.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Patent Databases</title>
      <link>https://mikenguyen.netlify.app/post/patent-databases/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/patent-databases/</guid>
      <description>
&lt;link href=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Comprehensive patent data can be found &lt;a href=&#34;https://eml.berkeley.edu/~bhhall/patents.html&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;United States&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sites.google.com/site/patentdataproject/Home/downloads&#34;&gt;NBER patent data&lt;/a&gt; or &lt;a href=&#34;https://eml.berkeley.edu/~bhhall/NBER06.html&#34;&gt;link&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Search link for individual patent: &lt;a href=&#34;http://patft.uspto.gov/&#34;&gt;link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.uspto.gov/api-catalog&#34;&gt;Patent API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;USPTO - United States patent and Trademark Office
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.uspto.gov/web/offices/ac/ido/oeip/taf/reports_topo.htm&#34;&gt;Patent ranking by orgs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bulkdata.uspto.gov/&#34;&gt;Bulk Data Storage System:&lt;/a&gt; repository for raw public bulk data
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.uspto.gov/ip-policy/economic-research/research-datasets&#34;&gt;For Researcher&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.uspto.gov/learning-and-resources/electronic-data-products/patent-assignment-dataset&#34;&gt;Patent Assignment Dataset&lt;/a&gt; details information of patent assignment since 1970 with &lt;a href=&#34;https://www.uspto.gov/sites/default/files/documents/pat_assign_dataset_schema.pdf&#34;&gt;schema&lt;/a&gt; and &lt;a href=&#34;https://www.uspto.gov/sites/default/files/documents/USPTO_Patents_Assignment_Dataset_WP.pdf&#34;&gt;description&lt;/a&gt; and &lt;a href=&#34;https://github.com/USPTO/PatentPublicData&#34;&gt;code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.patentsview.org/download/pregrantpublications.html&#34;&gt;Pre-Grant Publications Data Download Tables&lt;/a&gt; with example &lt;a href=&#34;https://github.com/PatentsView/PatentsView-Code-Snippets/blob/master/04_bulk_pregrant_read_in/R%20Scripts/rawassignee.Rmd&#34;&gt;code&lt;/a&gt; note that organizaiton here is different from Compustat and CRSP, hard to match.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ped.uspto.gov/peds/&#34;&gt;Patent Examiniation Data system&lt;/a&gt;: records of USPTO patent application, patent filing status and transaction history data&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.uspto.gov/learning-and-resources/electronic-data-products/trademark-assignment-dataset&#34;&gt;Trademark Assignment Dataset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.uspto.gov/learning-and-resources/electronic-data-products/patent-assignment-dataset&#34;&gt;Patent Assignment Dataset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenodo.org/record/3594694#.X9hH59hKgdW&#34;&gt;Duke Innovation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://iu.app.box.com/v/patents&#34;&gt;Matched US patents to CRSP 1926 - 2010&lt;/a&gt;: Leonid Kogan, Dimitris Papanikolaou, Amit Seru, and Noah Stoffman. &lt;a href=&#34;https://paper.dropbox.com/doc/U.S.-Patent-Data-1926-2010-t5nuNWnTH1InM0gyxkizL&#34;&gt;Description&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kelley.iu.edu/nstoffma/&#34;&gt;Maintainer&lt;/a&gt; with &lt;a href=&#34;https://github.com/KPSS2017/Technological-Innovation-Resource-Allocation-and-Growth-Extended-Data&#34;&gt;code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://www.uspto.gov/patents-application-process/applying-online/patent-number&#34;&gt;Recognizing Patent&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Utility: 6 - 8 digits lasts for 20 years from the filed date&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://www.uspto.gov/patent/laws-and-regulations/patent-term-calculator&#34;&gt;Changes to Patent Terms&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Year filed&lt;/th&gt;
&lt;th&gt;Maximum term of validity&lt;/th&gt;
&lt;th&gt;Act&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;1790–1835&lt;/td&gt;
&lt;td&gt;14 years from issuance&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Patent_Act_of_1790&#34;&gt;Patent Act of 1790&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;1836–1860&lt;/td&gt;
&lt;td&gt;21 years from issuance&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Patent_Act_of_1836&#34;&gt;Patent Act of 1836&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;1861– 1994&lt;/td&gt;
&lt;td&gt;17 years from issuance&lt;/td&gt;
&lt;td&gt;Congress changed term&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;1994 - now&lt;/td&gt;
&lt;td&gt;20 years from filing&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Uruguay_Round_Agreements_Act&#34;&gt;Uruguay Round Agreements Act&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Table based on &lt;a href=&#34;https://en.wikipedia.org/wiki/Term_of_patent_in_the_United_States&#34;&gt;wikipedia&lt;/a&gt; and &lt;a href=&#34;https://www.uspto.gov/patent/laws-and-regulations/patent-term-calculator&#34;&gt;USPTO&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reissue (RE######)&lt;/li&gt;
&lt;li&gt;Plant Patent (PP######) lasts for 20 years from the application date&lt;/li&gt;
&lt;li&gt;Design (D#######) lasts for 14 years from the granted date&lt;/li&gt;
&lt;li&gt;Additions or Improvements (AI#######)&lt;/li&gt;
&lt;li&gt;X Patents (X#######)&lt;/li&gt;
&lt;li&gt;H Documents (H#######)&lt;/li&gt;
&lt;li&gt;T Documents (T#######)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Worldwide&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.epo.org/searching-for-patents/business/patstat.html#tab-1&#34;&gt;EPO and OECD&lt;/a&gt; data&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.wipo.int/econ_stat/en/economics/research/&#34;&gt;wipo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Matching process with CRSP or Compustat&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wrds-www.wharton.upenn.edu/pages/data/contributed-data/kpss-technological-innovation-resource-allocation-and-growth/&#34;&gt;KPSS Technological Innovation, Resource Allocation, and Growth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://patents.darden.virginia.edu/documents/DataConstructionDetails_v01.pdf&#34;&gt;UVA Darden Global Corporate Patent Dataset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://voices.uchicago.edu/miaoliu/data-page/&#34;&gt;Miao Liu&lt;/a&gt; Note that you need Bing API and use Python &lt;a href=&#34;https://github.com/danielm-github/patentsmatch_bingsearchapproach&#34;&gt;Github repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://users.nber.org/~jbessen/matchdoc.pdf&#34;&gt;NBER Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Linking Financial Databases (CRSP and Compustat)</title>
      <link>https://mikenguyen.netlify.app/post/link_crsp_compustat/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/link_crsp_compustat/</guid>
      <description>
&lt;link href=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Information can be found in &lt;a href=&#34;https://www.otago.ac.nz/library/pdf/CRSPCompustatguide09.pdf&#34;&gt;CRSP/COMPUSTAT MERGED DATABASE GUIDE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Change Identifiers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ticker&lt;/strong&gt;: can be reassign to another company - abbreviation used to uniquely identify publicly-traded shares of a stock&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CUSIP&lt;/strong&gt;: A company can have multiple CUSIPS due to structural changes. - nine-character code assigned by the CUSIP Service Bureau to identify various securities&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Permanent Identifiers&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CRSP (maintained by Chicago BOoth CRSP)
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PERMCO&lt;/strong&gt;: is a unique permanent company level identifier (even under name change)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PERMNO&lt;/strong&gt;: is a unique stock (share class) level identifier. One company can have multiple share classes. (1 PERMNO -&amp;gt; 1 PERMCO, 1 -&amp;gt; multiple PERMNOs)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Compustat-Capital IQ (maintained by S&amp;amp;P)
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GVKEY&lt;/strong&gt;: is a unique number assigned to each company.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;CRSP&lt;/th&gt;
&lt;th&gt;COMPUSTAT&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Time since&lt;/td&gt;
&lt;td&gt;1925&lt;/td&gt;
&lt;td&gt;1950&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Companies&lt;/td&gt;
&lt;td&gt;listed in U.S. Exchange&lt;/td&gt;
&lt;td&gt;U.S. + Canada&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Report&lt;/td&gt;
&lt;td&gt;Daily and Monthly&lt;/td&gt;
&lt;td&gt;Quarterly and Annually&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Apache Arrow</title>
      <link>https://mikenguyen.netlify.app/post/arrow/</link>
      <pubDate>Sun, 06 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/arrow/</guid>
      <description>
&lt;link href=&#34;index_files/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;index_files/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;more information can be found in &lt;a href=&#34;https://ursalabs.org/&#34;&gt;URSA Labs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This example is from &lt;a href=&#34;https://ursalabs.org/arrow-r-nightly/articles/dataset.html&#34;&gt;Arrow Vignettes&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;arrow&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;arrow&lt;/h1&gt;
&lt;p&gt;best when working with big data&lt;/p&gt;
&lt;div id=&#34;prep&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Prep&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;arrow&amp;quot;, warn.conflicts = FALSE)
library(&amp;quot;dplyr&amp;quot;, warn.conflicts = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;check if S3 support is included.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;arrow::arrow_with_s3()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If TRUE, sync data locally import from &lt;a href=&#34;https://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page&#34;&gt;https://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;arrow::copy_files(&amp;quot;s3://ursa-labs-taxi-data&amp;quot;, &amp;quot;nyc-taxi&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;since the data is in Parquet format, we use&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ds &amp;lt;- open_dataset(&amp;quot;nyc-taxi&amp;quot;, partitioning = c(&amp;quot;year&amp;quot;, &amp;quot;month&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then you can start using data set as usual&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ds&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>doParallel</title>
      <link>https://mikenguyen.netlify.app/post/doparallel/</link>
      <pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/doparallel/</guid>
      <description>
&lt;link href=&#34;index_files/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;index_files/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;packages&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Packages&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#install.packages(&amp;quot;doParallel&amp;quot;)
library(&amp;quot;doParallel&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: foreach&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: iterators&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: parallel&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check how long a loop takes&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;start &amp;lt;- proc.time()
for (i in 1:10){
    sqrt(i)
}
base_loop=(proc.time()-start)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check number of cores&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;doParallel&amp;quot;)
detectCores()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 8&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;getDoParWorkers() #current number of worker&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;registerDoSEQ() #switch back to original
getDoParWorkers()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let R know how many cores you want to use&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;registerDoParallel(6)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You shouldn’t use all the cores since your computer might want some background programs to run.&lt;/p&gt;
&lt;p&gt;We can also create cluster of workers&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cluster = makeCluster(2)
registerDoParallel(cluster)
system.time(foreach(i=1:100) %dopar% sum((1:i)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##    0.03    0.00    0.04&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;stopCluster(cluster)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Compare different loops&lt;/p&gt;
&lt;p&gt;&lt;code&gt;%do%&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;start &amp;lt;- proc.time()
foreach(i=1:10) %do% {
    sqrt(i)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [[1]]
## [1] 1
## 
## [[2]]
## [1] 1.414214
## 
## [[3]]
## [1] 1.732051
## 
## [[4]]
## [1] 2
## 
## [[5]]
## [1] 2.236068
## 
## [[6]]
## [1] 2.44949
## 
## [[7]]
## [1] 2.645751
## 
## [[8]]
## [1] 2.828427
## 
## [[9]]
## [1] 3
## 
## [[10]]
## [1] 3.162278&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;do_loop=(proc.time()-start)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;%dopar%&lt;/code&gt; loop&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cl &amp;lt;- makeCluster(2)
registerDoParallel(cl)
start &amp;lt;- proc.time()
foreach(i = 1:10, .combine = &amp;#39;c&amp;#39;) %dopar% {
  sqrt(i)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 1.000000 1.414214 1.732051 2.000000 2.236068 2.449490 2.645751 2.828427
##  [9] 3.000000 3.162278&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dopar_loop=(proc.time()-start)
stopCluster(cl)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(rbind(base_loop,do_loop,dopar_loop)[,1:3])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            user.self sys.self elapsed
## base_loop       0.01        0    0.02
## do_loop         0.02        0    0.01
## dopar_loop      0.02        0    0.04&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;%do%&lt;/code&gt; does not use more than base core, but &lt;code&gt;%dopar%&lt;/code&gt; uses the number of cores that we specify in &lt;code&gt;registerDoParallel&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;doParallel::mclapply&lt;/code&gt; is the equivalent of &lt;code&gt;lapply&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>https://mikenguyen.netlify.app/post/r-rmarkdown/</link>
      <pubDate>Mon, 23 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/r-rmarkdown/</guid>
      <description>
&lt;link href=&#34;index_files/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;index_files/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;include Shiny App&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::include_app(&amp;quot;https://mikenguyen.shinyapps.io/first-app/&amp;quot;, height = &amp;quot;100%&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;iframe src=&#34;https://mikenguyen.shinyapps.io/first-app/?showcase=0&#34; width=&#34;672&#34; height=&#34;100%&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;Or you can embed directly as iframe.&lt;br /&gt;
But remember to include &lt;code&gt;runtime: shiny&lt;/code&gt; in the YAML metadata&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;iframe height=&amp;quot;800&amp;quot; width=&amp;quot;100%&amp;quot; title=&amp;quot;first app&amp;quot; name=&amp;quot;first app&amp;quot; allowfullscreen=&amp;quot;true&amp;quot; loading=&amp;quot;eager&amp;quot; scrolling=&amp;quot;auto&amp;quot;  style=&amp;quot;border:none;&amp;quot; src=&amp;quot;https://mikenguyen.shinyapps.io/first-app/&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;iframe height=&#34;800&#34; width=&#34;100%&#34; title=&#34;first app&#34; name=&#34;first app&#34; allowfullscreen=&#34;true&#34; loading=&#34;eager&#34; scrolling=&#34;auto&#34; style=&#34;border:none;&#34; src=&#34;https://mikenguyen.shinyapps.io/first-app/&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(cars)
##      speed           dist       
##  Min.   : 4.0   Min.   :  2.00  
##  1st Qu.:12.0   1st Qu.: 26.00  
##  Median :15.0   Median : 36.00  
##  Mean   :15.4   Mean   : 42.98  
##  3rd Qu.:19.0   3rd Qu.: 56.00  
##  Max.   :25.0   Max.   :120.00
fit &amp;lt;- lm(dist ~ speed, data = cars)
fit
## 
## Call:
## lm(formula = dist ~ speed, data = cars)
## 
## Coefficients:
## (Intercept)        speed  
##     -17.579        3.932&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;including-plots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Including Plots&lt;/h1&gt;
&lt;p&gt;You can also embed plots. See Figure &lt;a href=&#34;#fig:pie&#34;&gt;1&lt;/a&gt; for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mar = c(0, 1, 0, 1))
pie(c(280, 60, 20), c(&amp;quot;Sky&amp;quot;, &amp;quot;Sunny side of pyramid&amp;quot;, &amp;quot;Shady side of pyramid&amp;quot;), col = c(&amp;quot;#0292D8&amp;quot;, 
    &amp;quot;#F7EA39&amp;quot;, &amp;quot;#C4B632&amp;quot;), init.angle = -50, border = NA)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:pie&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;index_files/figure-html/pie-1.png&#34; alt=&#34;A fancy pie chart.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: A fancy pie chart.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
